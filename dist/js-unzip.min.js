!function(t){var e=function(t){this.fileContents=new e.BigEndianBinaryStream(t)};t.JSUnzip=e,e.MAGIC_NUMBER=67324752,e.prototype={readEntries:function(){if(!this.isZipFile())throw new Error("File is not a Zip file.");this.entries=[];for(var t=new e.ZipEntry(this.fileContents);"string"==typeof t.data;)this.entries.push(t),t=new e.ZipEntry(this.fileContents)},isZipFile:function(){return this.fileContents.getByteRangeAsNumber(0,4)===e.MAGIC_NUMBER}},e.ZipEntry=function(t){if(this.signature=t.getNextBytesAsNumber(4),this.signature===e.MAGIC_NUMBER){if(this.versionNeeded=t.getNextBytesAsNumber(2),this.bitFlag=t.getNextBytesAsNumber(2),this.compressionMethod=t.getNextBytesAsNumber(2),this.timeBlob=t.getNextBytesAsNumber(4),this.isEncrypted())throw"File contains encrypted entry. Not supported.";if(this.isUsingUtf8())throw"File is using UTF8. Not supported.";if(this.crc32=t.getNextBytesAsNumber(4),this.compressedSize=t.getNextBytesAsNumber(4),this.uncompressedSize=t.getNextBytesAsNumber(4),this.isUsingZip64())throw"File is using Zip64 (4gb+ file size). Not supported";this.fileNameLength=t.getNextBytesAsNumber(2),this.extraFieldLength=t.getNextBytesAsNumber(2),this.fileName=t.getNextBytesAsString(this.fileNameLength),this.extra=t.getNextBytesAsString(this.extraFieldLength),this.data=t.getNextBytesAsString(this.compressedSize),this.isUsingBit3TrailingDataDescriptor()&&("undefined"!=typeof console&&console.log("File is using bit 3 trailing data descriptor. Not supported."),t.getNextBytesAsNumber(16))}},e.ZipEntry.prototype={isEncrypted:function(){return 1==(1&this.bitFlag)},isUsingUtf8:function(){return 2048==(2048&this.bitFlag)},isUsingBit3TrailingDataDescriptor:function(){return 8==(8&this.bitFlag)},isUsingZip64:function(){4294967295===this.compressedSize||this.uncompressedSize}},e.BigEndianBinaryStream=function(t){this.stream=t,this.resetByteIndex()},e.BigEndianBinaryStream.prototype={resetByteIndex:function(){this.currentByteIndex=0},getByteAt:function(t){return this.stream[t]},getNextBytesAsNumber:function(t){var e=this.getByteRangeAsNumber(this.currentByteIndex,t);return this.currentByteIndex+=t,e},getNextBytesAsString:function(t){var e=this.getByteRangeAsString(this.currentByteIndex,t);return this.currentByteIndex+=t,e},getByteRangeAsNumber:function(t,e){for(var i=0,s=t+e-1;s>=t;)i=(i<<8)+this.getByteAt(s),s--;return i},getByteRangeAsString:function(t,e){for(var i="",s=t+e,n=t;n<s;){var r=this.getByteAt(n);i+=String.fromCharCode(r),s-=Math.floor(r/256),n++}return i}}}(this);
